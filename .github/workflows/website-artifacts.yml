on:
  push:
    branches:
      - main
      - develop
    tags:
      - "v*"
    paths:
      - 'src/metaschema/**_metaschema.xml'
      - 'build/ci-cd/metaschema'
      - 'build/ci-cd/metaschema-docs'
      - 'build/ci-cd/generate-model-documentation.sh'
      - 'build/metaschema'
      - '.github/workflows/website-artifacts.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/metaschema/**_metaschema.xml'
      - 'build/ci-cd/metaschema'
      - 'build/ci-cd/metaschema-docs'
      - 'docs/**'
      - 'build/ci-cd/generate-model-documentation.sh'
      - 'build/metaschema'
      - '.github/workflows/website.yml'
  workflow_dispatch:
    branches:
      - main
name: Build and Push Website Contents
env:
  # the name of the repo
  HOME_REPO: usnistgov/OSCAL
  HOME_BRANCH: main
  # dependency versions
  SAXON_VERSION: 9.9.0-1
  HUGO_VERSION: 0.83.1
  CALABASH_VERSION: 1.2.5-100
  # build-specific environment
  OSCAL_HOME: git-content/oscal
  CONTENT_CONFIG_PATH: src/config
  SCHEMATRON_HOME: git-content/schematron
  CALABASH_HOME: dependencies/calabash
  OSCAL_CICD_PATH: git-content/oscal/build/ci-cd
  OSCAL_WORKING_PATH: git-content/oscal
  OSCAL_WEBSITE_PATH: git-content/oscal/docs
  OSCAL_SCRATCH_PATH: oscal-scratch
jobs:
  build-and-push-website:
    name: Build and Push Website Contents
    runs-on: ubuntu-20.04
    steps:
      # use this for main repo builds on branches
      - name: Checkout working branch or Tag
        uses: actions/checkout@v2
        if: ${{ github.repository == env.HOME_REPO && github.event_name == 'push' }}
        with:
          path: ${{ env.OSCAL_HOME }}
          submodules: recursive
          token: ${{ secrets.COMMIT_TOKEN }}
      - name: Get latest from repo
        if: ${{ github.repository == env.HOME_REPO && github.event_name == 'push' }}
        # This will ensure that any files committed by the previous job, will be updated
        run: |
          git pull --ff-only
        working-directory: ${{ env.OSCAL_HOME }}
      # use this for pull request builds where checkout uses the builtin token
      - name: Checkout PR
        uses: actions/checkout@v2
        if: ${{ github.repository != env.HOME_REPO || github.event_name != 'push' }}
        with:
          path: ${{ env.OSCAL_HOME }}
          submodules: recursive
      # Setup runtime environment
      # -------------------------
      # Operating System packages
      - name: Update APT package metadata
        run: |
          sudo rm -rf /var/lib/apt/lists/* && sudo apt-get update
      # Java JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-
      - name: Get Saxon-HE
        run: |
          mvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get -DartifactId=Saxon-HE -DgroupId=net.sf.saxon -Dversion=$SAXON_VERSION
#      # Ruby and Bundler
#      - name: Install Ruby and Bundler
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 2.6 # Not needed with a .ruby-version file
#          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
#          working-directory: ${{ env.OSCAL_WEBSITE_PATH }}
      # Install Calabash
      - name: Install Calabash
        run: |
          wget https://github.com/ndw/xmlcalabash1/releases/download/${CALABASH_VERSION}/xmlcalabash-${CALABASH_VERSION}.zip
          mkdir -p "${CALABASH_HOME}"
          unzip -d "${CALABASH_HOME}" "xmlcalabash-${CALABASH_VERSION}.zip" && f=("${CALABASH_HOME}"/*) && mv "${CALABASH_HOME}"/*/* "${CALABASH_HOME}" && rmdir "${f[@]}"
      # Install Hugo
      - name: Install Hugo
        run: |
          wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb
          sudo apt-get install ./hugo_extended_${HUGO_VERSION}_Linux-64bit.deb
      # Build Artifacts
      # ---------------
      - name: Generate specification documentation
        run: |
          bash "${OSCAL_CICD_PATH}/generate-specification-documentation.sh"
      - uses: actions/upload-artifact@v2
        with:
          name: specification-docs
          path: |
            ${{ env.OSCAL_HOME }}/docs/content/documentation/processing/profile-resolution.html
          retention-days: 5
      # job-generate-docs
      - name: Generate Model Documentation
        run: |
          echo "PWD: ${PWD}"
          echo "OSCAL_HOME: ${OSCAL_HOME}"
          echo "Github Workspace: ${{ github.workspace }}"
          echo "Branch: $(git branch --show-current)"

          BRANCH="${GITHUB_REF}"
          echo "Branch(1): ${BRANCH}"
          if [[ "$BRANCH" =~ ^refs/pull/.* ]]; then
            BRANCH="${GITHUB_HEAD_REF}"
            echo "Branch(2): ${BRANCH}"
          elif [[ "$BRANCH" =~ ^refs/heads/.* ]]; then
            BRANCH="${GITHUB_REF#refs/heads/}"
            echo "Branch(3): ${BRANCH}"
          fi
          echo "Branch(4): ${BRANCH}"
          CALABASH_HOME="${{ github.workspace }}/${CALABASH_HOME}" bash "../build/ci-cd/generate-model-documentation.sh" -b "${BRANCH}"
        working-directory: ${{ github.workspace }}/${{ env.OSCAL_HOME }}/docs
      - name: Run Hugo
        run: |
            cd "${OSCAL_WEBSITE_PATH}"
            hugo --config "config.yaml,development-config.yaml" -v --debug --minify
      - uses: actions/upload-artifact@v2
        with:
          name: website
          path: |
            ${{ env.OSCAL_WEBSITE_PATH }}/public
          retention-days: 5
      - name: Check internal links
        uses: untitaker/hyperlink@0.1.15
        with:
          args: ${{ env.OSCAL_WEBSITE_PATH }}/public/ --sources ${{ env.OSCAL_WEBSITE_PATH }}/content --check-anchors
#      - name: Run HTMLProofer
#        run: |
#          cd "${OSCAL_WEBSITE_PATH}"
#          bundle exec htmlproofer --check-external-hash public/ --url-swap "https\://pages.nist.gov/OSCAL/:/" --assume-extension --log-level :debug --url-ignore "/pages.nist.gov\/(?:nist-header-footer|leaveNotice)\/.+/"
#      - uses: actions/upload-artifact@v2
#        with:
#          name: generated-docs
#          path: |
#            ${{ env.OSCAL_HOME }}/docs
#          retention-days: 5
      - name: Publish Artifacts
        # only do this on master
        if: ${{ github.repository == env.HOME_REPO && github.ref == format('refs/heads/{0}',env.HOME_BRANCH) }}
        uses: stefanzweifel/git-auto-commit-action@v4.14.1
        with:
          repository: ${{ env.OSCAL_HOME }}
          file_pattern: docs
          # push_options: --force-with-lease
          skip_dirty_check: false
          commit_message: Publishing Generated Website Content [ci skip]
          commit_user_name: OSCAL GitHub Actions Bot
          commit_user_email: oscal@nist.gov
          commit_author: OSCAL GitHub Actions Bot <oscal@nist.gov>
